name: tests

on: [ push ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]
        django-version: [ "3.2", "4.0", "4.1" ]
        drf-version: [ "3.9", "3.10", "3.11", "3.12" ]
        exclude:
          # django-version 3+ is compatible with drf 3.11+
          - django-version: "3.2"
            drf-version: "3.9"
          - django-version: "3.2"
            drf-version: "3.10"
          - django-version: "4.0"
            drf-version: "3.9"
          - django-version: "4.0"
            drf-version: "3.10"
          - django-version: "4.1"
            drf-version: "3.9"
          - django-version: "4.1"
            drf-version: "3.10"
          # django-version 4+ is compatible with python 3.8+
          - django-version: "4.0"
            python-version: "3.7"
          - django-version: "4.1"
            python-version: "3.7"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        python -m pip install "Django~=${{ matrix.django-version }}.0"
        python -m pip install "djangorestframework~=${{ matrix.drf-version }}.0"
    - name: Test with pytest
      run: python setup.py test
    - name: Send coverage to Codacy
      env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      run: |
        pip install codacy-coverage==1.3.11
        [ -z "$CODACY_PROJECT_TOKEN" ] && echo "CODACY_PROJECT_TOKEN is empty!" || python-codacy-coverage -r ./coverage.xml
